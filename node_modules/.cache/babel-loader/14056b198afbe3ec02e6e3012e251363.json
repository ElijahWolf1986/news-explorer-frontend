{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/volkovilya/dev/diploma-frontend/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Router, Route, Switch, useHistory } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"../Header/Header\";\nimport Main from \"../Main/Main\";\nimport Footer from \"../Footer/Footer\";\nimport SavedNews from \"../SavedNews/SavedNews\";\nimport Login from \"../Login\";\nimport Register from \"../Register\";\nimport InfoTooltip from \"../InfoTooltip\";\nimport PopupMenu from \"../PopupMenu/PopupMenu\";\n\nfunction App() {\n  _s();\n\n  const history = useHistory();\n  const [loggedIn, setLoggedIn] = React.useState(true); //временно тру для тестирования верстки без api auth\n\n  const [isOpenLogin, setIsOpenLogin] = React.useState(false);\n  const [isResetForm, setIsResetForm] = React.useState(false);\n  const [isOpenRegister, setIsOpenRegister] = React.useState(false);\n  const [isOpenPopupInfo, setIsOpenPopupInfo] = React.useState(false);\n  const [isOpenPopupMenu, setIsOpenPopupMenu] = React.useState(false);\n  const [errorServerMessage, setErrorServerMessage] = React.useState(\"\");\n\n  function closeAllPopups() {\n    setIsOpenLogin(false);\n    setIsOpenRegister(false);\n    setIsOpenPopupInfo(false);\n    setIsResetForm(true);\n    setIsOpenPopupMenu(false);\n  }\n\n  const handleLogin = (email, password) => {\n    //тут будет обработака запроса авторизации\n    setErrorServerMessage(\"Удача, но apiAuth еще не подключен :)\");\n    setTimeout(() => {\n      setErrorServerMessage(\"\");\n    }, 2000);\n  };\n\n  const handleRegister = (email, password, name) => {\n    //тут будет обработака запроса на регистрацию\n    setErrorServerMessage(\"Удача, но apiAuth еще не подключен :)\");\n    setIsOpenPopupInfo(true);\n    setIsOpenRegister(false);\n  };\n\n  function handleOpenLogin() {\n    setIsOpenLogin(true);\n    setErrorServerMessage(\"\");\n  }\n\n  function handleOpenPopupMenu() {\n    setIsOpenPopupMenu(true);\n  }\n\n  function handleClosePopupMenu() {\n    setIsOpenPopupMenu(false);\n  }\n\n  function handleRedirect(evt) {\n    evt.preventDefault();\n\n    if (isOpenPopupInfo) {\n      setIsOpenLogin(true);\n      setIsOpenPopupInfo(false);\n      setErrorServerMessage(\"\");\n    } else {\n      if (isOpenLogin) {\n        setIsOpenLogin(false);\n        setIsOpenRegister(true);\n        setErrorServerMessage(\"\");\n      } else {\n        setIsOpenLogin(true);\n        setIsOpenRegister(false);\n        setErrorServerMessage(\"\");\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    history: history,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        loggedIn: loggedIn,\n        onOpenLogin: handleOpenLogin,\n        onClose: closeAllPopups,\n        onOpenPopupMenu: handleOpenPopupMenu,\n        isOpenPopupMenu: isOpenPopupMenu,\n        isOpenLogin: isOpenLogin,\n        isOpenRegister: isOpenRegister,\n        isOpenPopupInfo: isOpenPopupInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/saved-news\",\n          children: /*#__PURE__*/_jsxDEV(SavedNews, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Login, {\n        isOpen: isOpenLogin,\n        onResetForm: isResetForm,\n        onClose: closeAllPopups,\n        onLogin: handleLogin,\n        onServerErrorMessage: errorServerMessage,\n        redirect: handleRedirect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Register, {\n        isOpen: isOpenRegister,\n        onResetForm: isResetForm,\n        onClose: closeAllPopups,\n        onRegister: handleRegister,\n        onServerErrorMessage: errorServerMessage,\n        redirect: handleRedirect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupMenu, {\n        isOpenPopupMenu: isOpenPopupMenu,\n        onClose: closeAllPopups,\n        loggedIn: loggedIn,\n        onOpenLogin: handleOpenLogin,\n        onOpenPopupMenu: handleOpenPopupMenu,\n        onClosePopupMenu: handleClosePopupMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isOpenPopupInfo,\n        onClose: closeAllPopups,\n        redirect: handleRedirect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UvFjNOYERVh9A7LX0LqtOCAY3vg=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/volkovilya/dev/diploma-frontend/src/components/App/App.js"],"names":["React","Router","Route","Switch","useHistory","Header","Main","Footer","SavedNews","Login","Register","InfoTooltip","PopupMenu","App","history","loggedIn","setLoggedIn","useState","isOpenLogin","setIsOpenLogin","isResetForm","setIsResetForm","isOpenRegister","setIsOpenRegister","isOpenPopupInfo","setIsOpenPopupInfo","isOpenPopupMenu","setIsOpenPopupMenu","errorServerMessage","setErrorServerMessage","closeAllPopups","handleLogin","email","password","setTimeout","handleRegister","name","handleOpenLogin","handleOpenPopupMenu","handleClosePopupMenu","handleRedirect","evt","preventDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Router, Route, Switch, useHistory } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"../Header/Header\";\nimport Main from \"../Main/Main\";\nimport Footer from \"../Footer/Footer\";\nimport SavedNews from \"../SavedNews/SavedNews\";\nimport Login from \"../Login\";\nimport Register from \"../Register\";\nimport InfoTooltip from \"../InfoTooltip\";\nimport PopupMenu from \"../PopupMenu/PopupMenu\";\n\nfunction App() {\n  const history = useHistory();\n  const [loggedIn, setLoggedIn] = React.useState(true); //временно тру для тестирования верстки без api auth\n  const [isOpenLogin, setIsOpenLogin] = React.useState(false);\n  const [isResetForm, setIsResetForm] = React.useState(false);\n  const [isOpenRegister, setIsOpenRegister] = React.useState(false);\n  const [isOpenPopupInfo, setIsOpenPopupInfo] = React.useState(false);\n  const [isOpenPopupMenu, setIsOpenPopupMenu] = React.useState(false);\n  const [errorServerMessage, setErrorServerMessage] = React.useState(\"\");\n\n  function closeAllPopups() {\n    setIsOpenLogin(false);\n    setIsOpenRegister(false);\n    setIsOpenPopupInfo(false);\n    setIsResetForm(true);\n    setIsOpenPopupMenu(false);\n  }\n\n  const handleLogin = (email, password) => {\n    //тут будет обработака запроса авторизации\n    setErrorServerMessage(\"Удача, но apiAuth еще не подключен :)\");\n    setTimeout(() => {\n      setErrorServerMessage(\"\");\n    }, 2000);\n  };\n\n  const handleRegister = (email, password, name) => {\n    //тут будет обработака запроса на регистрацию\n    setErrorServerMessage(\"Удача, но apiAuth еще не подключен :)\");\n    setIsOpenPopupInfo(true);\n    setIsOpenRegister(false);\n  };\n\n  function handleOpenLogin() {\n    setIsOpenLogin(true);\n    setErrorServerMessage(\"\");\n  }\n\n  function handleOpenPopupMenu() {\n    setIsOpenPopupMenu(true);\n  }\n\n  function handleClosePopupMenu() {\n    setIsOpenPopupMenu(false);\n  }\n\n  function handleRedirect(evt) {\n    evt.preventDefault();\n    if (isOpenPopupInfo) {\n      setIsOpenLogin(true);\n      setIsOpenPopupInfo(false);\n      setErrorServerMessage(\"\");\n    } else {\n      if (isOpenLogin) {\n        setIsOpenLogin(false);\n        setIsOpenRegister(true);\n        setErrorServerMessage(\"\");\n      } else {\n        setIsOpenLogin(true);\n        setIsOpenRegister(false);\n        setErrorServerMessage(\"\");\n      }\n    }\n  }\n\n  return (\n    <Router history={history}>\n      <div className=\"page\">\n        <Header\n          loggedIn={loggedIn}\n          onOpenLogin={handleOpenLogin}\n          onClose={closeAllPopups}\n          onOpenPopupMenu={handleOpenPopupMenu}\n          isOpenPopupMenu={isOpenPopupMenu}\n          isOpenLogin={isOpenLogin}\n          isOpenRegister={isOpenRegister}\n          isOpenPopupInfo={isOpenPopupInfo}\n        />\n        <Switch>\n          <Route exact path=\"/\">\n            <Main />\n          </Route>\n          <Route path=\"/saved-news\">\n            <SavedNews />\n          </Route>\n        </Switch>\n        <Login\n          isOpen={isOpenLogin}\n          onResetForm={isResetForm}\n          onClose={closeAllPopups}\n          onLogin={handleLogin}\n          onServerErrorMessage={errorServerMessage}\n          redirect={handleRedirect}\n        />\n        <Register\n          isOpen={isOpenRegister}\n          onResetForm={isResetForm}\n          onClose={closeAllPopups}\n          onRegister={handleRegister}\n          onServerErrorMessage={errorServerMessage}\n          redirect={handleRedirect}\n        />\n\n        <PopupMenu\n          isOpenPopupMenu={isOpenPopupMenu}\n          onClose={closeAllPopups}\n          loggedIn={loggedIn}\n          onOpenLogin={handleOpenLogin}\n          onOpenPopupMenu={handleOpenPopupMenu}\n          onClosePopupMenu={handleClosePopupMenu}\n        />\n\n        <InfoTooltip\n          isOpen={isOpenPopupInfo}\n          onClose={closeAllPopups}\n          redirect={handleRedirect}\n        />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n "]},"metadata":{},"sourceType":"module"}