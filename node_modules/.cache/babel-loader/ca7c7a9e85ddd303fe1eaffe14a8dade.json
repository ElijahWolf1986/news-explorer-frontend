{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/volkovilya/dev/diploma-frontend/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm/PopupWithForm';\nimport { handleValidationEmail, handleValidationPassword } from \"../utils/ValidationForm\";\n\nfunction Login(props) {\n  _s();\n\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [errMessageEmail, setErrMessageEmail] = React.useState(\"\");\n  const [errMessagePassword, setErrMessagePassword] = React.useState(\"\");\n  const [isButtonSaveDisabled, setButtonSaveDisabled] = React.useState(true);\n\n  const resetForm = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n    setErrMessageEmail(\"\");\n    setErrMessagePassword(\"\");\n  };\n\n  const handleSubmit = evt => {\n    //решает какую ошибку и где выводить пользователю при неверной валидации\n    evt.preventDefault();\n\n    if (handleValidationEmail(email) && handleValidationPassword(password)) {\n      props.onRegister(email, password);\n      resetForm();\n    } else {\n      if (!handleValidationEmail(email)) setErrMessageEmail(\"Неправильный формат email\");\n      if (!handleValidationPassword(password)) setErrMessagePassword(\"Пароль введен неверно\");\n      return;\n    }\n  };\n\n  const handleChangeEmail = evt => {\n    setEmail(evt.target.value);\n    setErrMessageEmail(\"\");\n  };\n\n  const handleChangePassword = evt => {\n    setPassword(evt.target.value);\n    setErrMessagePassword(\"\");\n  };\n\n  React.useEffect(() => {\n    //устанавливает кнопку сохранить в нужную кондицию при изменении полей ввода\n    if (email && password) {\n      setButtonSaveDisabled(false);\n    } else {\n      setButtonSaveDisabled(true);\n    }\n  }, [handleChangeEmail, handleChangePassword]);\n  React.useEffect(() => {\n    //сбрасывает форму при выходе из нее даже если пользователь не дошел до отправки формы и передумал заполнять\n    if (props.onResetForm) {\n      resetForm();\n    }\n  }, [props.onClose]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"popup_auth\",\n    title: \"\\u0412\\u0445\\u043E\\u0434\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"popup__form-auth\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"popup__label\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email || '',\n        onChange: handleChangeEmail,\n        name: \"email\",\n        required: true,\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u043E\\u0447\\u0442\\u0443\",\n        className: \"popup__input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__error_visible\",\n        children: errMessageEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"popup__label\",\n        children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password || '',\n        onChange: handleChangePassword,\n        name: \"password\",\n        required: true,\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        className: \"popup__input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__error_visible\",\n        children: errMessagePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__server-error_visible\",\n      children: props.onServerErrorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: `popup__button-save ${isButtonSaveDisabled && \"popup__button-save_disabled\"}`,\n      disabled: isButtonSaveDisabled,\n      children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__redirect\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"popup__redirect-paragraph\",\n        children: \"\\u0438\\u043B\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__redirect-link\",\n        onClick: props.redirect,\n        children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0435\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"Y2X8ubw09r2qW5uGp73MHvPD0C8=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/volkovilya/dev/diploma-frontend/src/components/Login.js"],"names":["React","PopupWithForm","handleValidationEmail","handleValidationPassword","Login","props","email","setEmail","useState","password","setPassword","errMessageEmail","setErrMessageEmail","errMessagePassword","setErrMessagePassword","isButtonSaveDisabled","setButtonSaveDisabled","resetForm","handleSubmit","evt","preventDefault","onRegister","handleChangeEmail","target","value","handleChangePassword","useEffect","onResetForm","onClose","isOpen","onServerErrorMessage","redirect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PopupWithForm from './PopupWithForm/PopupWithForm';\nimport {handleValidationEmail, handleValidationPassword} from \"../utils/ValidationForm\";\n\nfunction Login(props) {\n    const [email, setEmail] = React.useState(\"\");\n    const [password, setPassword] = React.useState(\"\");\n    const [errMessageEmail, setErrMessageEmail] = React.useState(\"\");\n    const [errMessagePassword, setErrMessagePassword] = React.useState(\"\");\n    const [isButtonSaveDisabled, setButtonSaveDisabled] = React.useState(true);\n\n    const resetForm = () => {\n        setEmail(\"\");\n        setPassword(\"\");\n        setErrMessageEmail(\"\");\n        setErrMessagePassword(\"\");\n      };\n    \n      const handleSubmit = (evt) => { //решает какую ошибку и где выводить пользователю при неверной валидации\n        evt.preventDefault();\n        if (handleValidationEmail(email) && handleValidationPassword(password)) {\n            props.onRegister(email, password);\n            resetForm();\n        } else {\n            if (!handleValidationEmail(email))  setErrMessageEmail(\"Неправильный формат email\");\n            if (!handleValidationPassword(password))  setErrMessagePassword(\"Пароль введен неверно\");\n            return\n        }\n      };\n\n    \n      const handleChangeEmail = (evt) => {\n        setEmail(evt.target.value);\n        setErrMessageEmail(\"\");\n      };\n    \n      const handleChangePassword = (evt) => {\n        setPassword(evt.target.value);\n        setErrMessagePassword(\"\");\n      };\n\n      React.useEffect(() => { //устанавливает кнопку сохранить в нужную кондицию при изменении полей ввода\n        if (email && password) {\n          setButtonSaveDisabled(false);\n        } else {\n          setButtonSaveDisabled(true);\n        }\n\n      }, [handleChangeEmail, handleChangePassword]);\n\n      React.useEffect(() => { //сбрасывает форму при выходе из нее даже если пользователь не дошел до отправки формы и передумал заполнять\n        if (props.onResetForm) {\n          resetForm();\n        } \n      }, [props.onClose]);\n    \n    return (\n        <PopupWithForm name='popup_auth' title='Вход' isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} >\n            <fieldset className=\"popup__form-auth\">\n                <label className=\"popup__label\">Email</label>\n                <input type=\"email\" value={email || ''} onChange={handleChangeEmail} name=\"email\" required placeholder=\"Введите почту\" className=\"popup__input\" />\n                <span className=\"popup__error_visible\">{errMessageEmail}</span>\n                <label className=\"popup__label\">Пароль</label>\n                <input type=\"password\" value={password || ''} onChange={handleChangePassword} name=\"password\" required placeholder=\"Введите пароль\" className=\"popup__input\" />\n                <span className=\"popup__error_visible\">{errMessagePassword}</span>\n            </fieldset>\n            <span className=\"popup__server-error_visible\">{props.onServerErrorMessage}</span>\n            <button type=\"submit\" className={`popup__button-save ${isButtonSaveDisabled && \"popup__button-save_disabled\"}`} disabled={isButtonSaveDisabled}>Сохранить</button>\n            <div className=\"popup__redirect\">\n                <p className=\"popup__redirect-paragraph\">или</p>\n                <button className=\"popup__redirect-link\" onClick={props.redirect}>Зарегестрироваться</button>\n            </div>\n        </PopupWithForm>\n    )\n}\n\nexport default Login;   \n"]},"metadata":{},"sourceType":"module"}